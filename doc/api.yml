swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
- name: order-controller
  description: Order Controller
- name: product-controller
  description: Product Controller
paths:
  /order:
    post:
      tags:
      - order-controller
      summary: findOrdersInRange
      operationId: findOrdersInRangeUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: criteria
        description: criteria
        required: true
        schema:
          $ref: '#/definitions/FindOrderCriteriaDTO'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
      - order-controller
      summary: createOrder
      operationId: createOrderUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: orderDTO
        description: orderDTO
        required: true
        schema:
          $ref: '#/definitions/OrderDTO'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /products:
    get:
      tags:
      - product-controller
      summary: getProducts
      operationId: getProductsUsingGET
      produces:
      - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    put:
      tags:
      - product-controller
      summary: createProduct
      operationId: createProductUsingPUT
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: newProduct
        description: newProduct
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/products/{id}':
    get:
      tags:
      - product-controller
      summary: getProduct
      operationId: getProductUsingGET
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
      - product-controller
      summary: updateProduct
      operationId: updateProductUsingPOST
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      - in: body
        name: product
        description: product
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    delete:
      tags:
      - product-controller
      summary: deleteProduct
      operationId: deleteProductUsingDELETE
      produces:
      - '*/*'
      parameters:
      - name: id
        in: path
        description: id
        required: true
        type: integer
        format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
definitions:
  FindOrderCriteriaDTO:
    type: object
    properties:
      dateFrom:
        type: string
        format: date-time
      dateTo:
        type: string
        format: date-time
    title: FindOrderCriteriaDTO
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
        - 100 CONTINUE
        - 101 SWITCHING_PROTOCOLS
        - 102 PROCESSING
        - 103 CHECKPOINT
        - 200 OK
        - 201 CREATED
        - 202 ACCEPTED
        - 203 NON_AUTHORITATIVE_INFORMATION
        - 204 NO_CONTENT
        - 205 RESET_CONTENT
        - 206 PARTIAL_CONTENT
        - 207 MULTI_STATUS
        - 208 ALREADY_REPORTED
        - 226 IM_USED
        - 300 MULTIPLE_CHOICES
        - 301 MOVED_PERMANENTLY
        - 302 FOUND
        - 302 MOVED_TEMPORARILY
        - 303 SEE_OTHER
        - 304 NOT_MODIFIED
        - 305 USE_PROXY
        - 307 TEMPORARY_REDIRECT
        - 308 PERMANENT_REDIRECT
        - 400 BAD_REQUEST
        - 401 UNAUTHORIZED
        - 402 PAYMENT_REQUIRED
        - 403 FORBIDDEN
        - 404 NOT_FOUND
        - 405 METHOD_NOT_ALLOWED
        - 406 NOT_ACCEPTABLE
        - 407 PROXY_AUTHENTICATION_REQUIRED
        - 408 REQUEST_TIMEOUT
        - 409 CONFLICT
        - 410 GONE
        - 411 LENGTH_REQUIRED
        - 412 PRECONDITION_FAILED
        - 413 PAYLOAD_TOO_LARGE
        - 413 REQUEST_ENTITY_TOO_LARGE
        - 414 URI_TOO_LONG
        - 414 REQUEST_URI_TOO_LONG
        - 415 UNSUPPORTED_MEDIA_TYPE
        - 416 REQUESTED_RANGE_NOT_SATISFIABLE
        - 417 EXPECTATION_FAILED
        - 418 I_AM_A_TEAPOT
        - 419 INSUFFICIENT_SPACE_ON_RESOURCE
        - 420 METHOD_FAILURE
        - 421 DESTINATION_LOCKED
        - 422 UNPROCESSABLE_ENTITY
        - 423 LOCKED
        - 424 FAILED_DEPENDENCY
        - 426 UPGRADE_REQUIRED
        - 428 PRECONDITION_REQUIRED
        - 429 TOO_MANY_REQUESTS
        - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
        - 451 UNAVAILABLE_FOR_LEGAL_REASONS
        - 500 INTERNAL_SERVER_ERROR
        - 501 NOT_IMPLEMENTED
        - 502 BAD_GATEWAY
        - 503 SERVICE_UNAVAILABLE
        - 504 GATEWAY_TIMEOUT
        - 505 HTTP_VERSION_NOT_SUPPORTED
        - 506 VARIANT_ALSO_NEGOTIATES
        - 507 INSUFFICIENT_STORAGE
        - 508 LOOP_DETECTED
        - 509 BANDWIDTH_LIMIT_EXCEEDED
        - 510 NOT_EXTENDED
        - 511 NETWORK_AUTHENTICATION_REQUIRED
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  OrderDTO:
    type: object
    properties:
      buyerEmail:
        type: string
      date:
        type: string
        format: date-time
      id:
        type: integer
        format: int64
      lines:
        type: array
        items:
          $ref: '#/definitions/OrderLineDTO'
      total:
        type: number
        format: double
    title: OrderDTO
  OrderLineDTO:
    type: object
    properties:
      productName:
        type: string
      qty:
        type: number
        format: double
    title: OrderLineDTO
  Product:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: number
        format: double
      um:
        type: string
    title: Product
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
